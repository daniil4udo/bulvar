/// to be able to use all possible variables withing 1 import
/// @use "utilities/derived-variables" as vars
@forward "initial-variables"

@use "sass:color"

@use "functions" as fn
@use "initial-variables" as *

$primary: $turquoise !default
$secondary: $blue !default

$info: $cyan !default
$success: $green !default
$warning: $yellow !default
$danger: $red !default

$light: $white-ter !default
$dark: $grey-darker !default

// Invert colors

$orange-invert: fn.findColorInvert($orange) !default
$yellow-invert: fn.findColorInvert($yellow) !default
$green-invert: fn.findColorInvert($green) !default
$turquoise-invert: fn.findColorInvert($turquoise) !default
$cyan-invert: fn.findColorInvert($cyan) !default
$blue-invert: fn.findColorInvert($blue) !default
$purple-invert: fn.findColorInvert($purple) !default
$red-invert: fn.findColorInvert($red) !default

$primary-invert: fn.findColorInvert($primary, $turquoise) !default
$primary-light: fn.findLightColor($primary, $turquoise) !default
$primary-dark: fn.findDarkColor($primary, $turquoise) !default
$secondary-invert: fn.findColorInvert($secondary, $blue) !default
$secondary-light: fn.findLightColor($secondary, $blue) !default
$secondary-dark: fn.findDarkColor($secondary, $blue) !default
$info-invert: fn.findColorInvert($info, $cyan) !default
$info-light: fn.findLightColor($info, $cyan) !default
$info-dark: fn.findDarkColor($info, $cyan) !default
$success-invert: fn.findColorInvert($success, $green) !default
$success-light: fn.findLightColor($success, $green) !default
$success-dark: fn.findDarkColor($success, $green) !default
$warning-invert: fn.findColorInvert($warning, $yellow) !default
$warning-light: fn.findLightColor($warning, $yellow) !default
$warning-dark: fn.findDarkColor($warning, $yellow) !default
$danger-invert: fn.findColorInvert($danger, $red) !default
$danger-light: fn.findLightColor($danger, $red) !default
$danger-dark: fn.findDarkColor($danger, $red) !default
$light-invert: fn.findColorInvert($light, $white-ter) !default
$dark-invert: fn.findColorInvert($dark, $grey-darker) !default

// General colors

$scheme-main: $white !default
$scheme-main-bis: $white-bis !default
$scheme-main-ter: $white-ter !default
$scheme-invert: $black !default
$scheme-invert-rgb: fn.bulmaToRGB($black) !default
$scheme-invert-bis: $black-bis !default
$scheme-invert-ter: $black-ter !default

$background: $white-ter !default

$border: $grey-lighter !default
$border-rgb: fn.bulmaToRGB($grey-lighter) !default
$border-hover: $grey-light !default
$border-light: $grey-lightest !default
$border-light-hover: $grey-light !default

// Text colors

$text: $grey-dark !default
$text-invert: fn.findColorInvert($text, $grey-dark) !default
$text-light: $grey !default
$text-strong: $grey-darker !default

// Code colors

$code: color.adjust($red, $lightness: -15%) !default
$code-background: var(--background, #{$background}) !default

$pre: var(--text, #{$text}) !default
$pre-background: var(--background, #{$background}) !default

// Link colors

$link: $blue !default
$link-rgb: fn.bulmaToRGB($blue) !default
$link-invert: fn.findColorInvert($link, $blue) !default
$link-light: fn.findLightColor($link, $blue) !default
$link-dark: fn.findDarkColor($link, $blue) !default
$link-visited: $purple !default

$link-hover: $grey-darker !default
$link-hover-border: $grey-light !default

$link-focus: $grey-darker !default
$link-focus-border: var(--link, #{$blue}) !default

$link-active: $grey-darker !default
$link-active-border: $grey-dark !default

// Typography

$family-primary: $family-sans-serif !default
$family-secondary: $family-sans-serif !default
$family-code: $family-monospace !default

$size-small: $size-7 !default
$size-normal: $size-6 !default
$size-medium: $size-5 !default
$size-large: $size-4 !default

// Effects

$shadow: 0 0.5em 1em -0.125em rgba(var(--scheme-invert-rgb, #{fn.bulmaToRGB($scheme-invert)}), 0.1), 0 0px 0 1px rgba(var(--scheme-invert-rgb, #{fn.bulmaToRGB($scheme-invert)}), 0.02) !default

// Lists and maps

$custom-colors: null !default
$custom-shades: null !default

$colors: fn.mergeColorMaps(("white": ($white, $black), "black": ($black, $white), "light": ($light, $light-invert), "dark": ($dark, $dark-invert), "primary": ($primary, $primary-invert, $primary-light, $primary-dark), "secondary": ($secondary, $secondary-invert, $secondary-light, $secondary-dark), "link": ($link, $link-invert, $link-light, $link-dark), "info": ($info, $info-invert, $info-light, $info-dark), "success": ($success, $success-invert, $success-light, $success-dark), "warning": ($warning, $warning-invert, $warning-light, $warning-dark), "danger": ($danger, $danger-invert, $danger-light, $danger-dark)), $custom-colors) !default

$shades: fn.mergeColorMaps(("black-bis": $black-bis, "black-ter": $black-ter, "grey-darker": $grey-darker, "grey-dark": $grey-dark, "grey": $grey, "grey-light": $grey-light, "grey-lighter": $grey-lighter, "grey-lightest": $grey-lightest, "white-ter": $white-ter, "white-bis": $white-bis), $custom-shades) !default

$sizes: $size-1 $size-2 $size-3 $size-4 $size-5 $size-6 $size-7 !default
