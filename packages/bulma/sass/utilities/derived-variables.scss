/// to be able to use all possible variables withing 1 import
/// @use "../utilities/derived-variables" as vars
@forward "initial-variables";

@use "sass:color";
@use "functions" as fn;
@use "mixins-scss";
@use "initial-variables" as *;

$primary: $green !default;
$secondary: $blue !default;
$link: $blue !default;
$info: $cyan !default;
$success: $turquoise !default;
$warning: $yellow !default;
$danger: $red !default;
$light: $white-ter !default;
$dark: $grey-darker !default;

// General colors

$scheme-main: $white !default;
$scheme-main-bis: $white-bis !default;
$scheme-main-ter: $white-ter !default;
$scheme-invert: mixins-scss.get-invert-color(var(--scheme-main)) !default;
$scheme-invert-bis: $black-bis !default;
$scheme-invert-ter: $black-ter !default;

$background: $white-ter !default;
$border: $grey-lighter !default;
$border-hover: $grey-light !default;
$border-light: $grey-lightest !default;
$border-light-hover: $grey-light !default;

// Text colors

$text: $grey-dark !default;
$text-invert: mixins-scss.get-invert-color(var(--text)) !default;
$text-light: mixins-scss.get-light-color(var(--text)) !default;
$text-strong: mixins-scss.get-dark-color(var(--text)) !default;

// Code colors

$code: var(--text) !default;
$code-background: var(--background) !default;

$pre: var(--text) !default;
$pre-background: var(--background) !default;

// Link colors

$link-visited: $purple !default;
$link-hover: $grey-darker !default;
$link-hover-border: $grey-light !default;
$link-focus: $grey-darker !default;
$link-focus-border: var(--link) !default;
$link-active: $grey-darker !default;
$link-active-border: $grey-dark !default;

// Typography

$family-primary: $family-sans-serif !default;
$family-secondary: $family-sans-serif !default;
$family-code: $family-monospace !default;
$size-small: $size-7 !default;
$size-normal: $size-6 !default;
$size-medium: $size-5 !default;
$size-large: $size-4 !default;

// Effects

$shadow: 0 0.5em 1em -0.125em mixins-scss.set-color-alpha(var(--scheme-invert), 0.1),
	0 0 0 1px mixins-scss.set-color-alpha(var(--scheme-invert), 0.02) !default;

// Lists and maps

$custom-colors: null !default;
$base-colors: mixins-scss.merge-color-maps((
	"white": ($white, $black),
	"black": ($black, $white),
	"light": ($light, $dark),
	"dark": ($dark, $light),
), (
	"primary": $primary,
	"secondary": $secondary,
	"link": $link,
	"info": $info,
	"success": $success,
	"warning": $warning,
	"danger": $danger
));

// This manipulation is needed to automatically generate *-inverted, *-light, *-dark colors
// Without redundantly define it ourselves
$colors: mixins-scss.merge-color-maps(
	$base-colors,
	$custom-colors
) !default;

$custom-shades: null !default;
$shades: mixins-scss.merge-color-maps(
	(
		"black-bis": $black-bis,
		"black-ter": $black-ter,
		"grey-darker": $grey-darker,
		"grey-dark": $grey-dark,
		"grey": $grey,
		"grey-light": $grey-light,
		"grey-lighter": $grey-lighter,
		"grey-lightest": $grey-lightest,
		"white-ter": $white-ter,
		"white-bis": $white-bis
	),
	$custom-shades
) !default;

$sizes: $size-1 $size-2 $size-3 $size-4 $size-5 $size-6 $size-7 !default;
