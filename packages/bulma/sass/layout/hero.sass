@use "sass:list"
@use "sass:meta"

@use "../utilities/derived-variables" as vars
@use "../utilities"
@use "../utilities/mixins-scss"

$hero-body-padding: 3rem 1.5rem !default
$hero-body-padding-tablet: 3rem 3rem !default
$hero-body-padding-small: 1.5rem !default
$hero-body-padding-medium: 9rem 4.5rem !default
$hero-body-padding-large: 18rem 6rem !default

$hero-colors: vars.$colors !default

// Map Local variables
$-css-vars-map: ('hero-body-padding': $hero-body-padding, 'hero-body-padding-tablet': $hero-body-padding-tablet, 'hero-body-padding-small': $hero-body-padding-small, 'hero-body-padding-medium': $hero-body-padding-medium, 'hero-body-padding-large': $hero-body-padding-large)
+utilities.exportCSSVars($-css-vars-map)
+utilities.registerComponentCSSVars("hero", $-css-vars-map)
// --hero-body-padding: #{$hero-body-padding}
// --hero-body-padding-tablet: #{$hero-body-padding-tablet}
// --hero-body-padding-small: #{$hero-body-padding-small}
// --hero-body-padding-medium: #{$hero-body-padding-medium}
// --hero-body-padding-large: #{$hero-body-padding-large}

// Main container
.hero
  align-items: stretch
  display: flex
  flex-direction: column
  justify-content: space-between
  .navbar
    background: none
  .tabs
    ul
      border-bottom: none
  // Colors
  @each $name, $pair in $hero-colors
    $color: list.nth($pair, 1)
    $color-invert: list.nth($pair, 2)
    &.is-#{$name}
      background-color: var(--#{$name})
      color: var(--#{$name}-invert)
      a:not(.button, .dropdown-item, .tag, .pagination-link.is-current),
      strong
        color: inherit
      .title
        color: var(--#{$name}-invert)
      .subtitle
        color: var(--#{$name}-invert-bis)
        a:not(.button),
        strong
          color: var(--#{$name}-invert)
      .navbar-menu
        +utilities.touch
          background-color: var(--#{$name})
      :is(.navbar-item, .navbar-link)
        color: var(--#{$name}-invert-ter)
      :is(a.navbar-item, .navbar-link)
        &:is(:hover, .is-active)
          background-color: #{mixins-scss.darken-color(var(--#{$name}), 5)}
          color: var(--#{$name}-invert)
      .tabs
        a
          color: var(--#{$name}-invert)
          opacity: 0.9
          &:hover
            opacity: 1
        li
          &.is-active a
            color: var(--#{$name}) !important
            opacity: 1
        &:is(.is-boxed, .is-toggle)
          a
            color: var(--#{$name}-invert)
            &:hover
              background-color: #{mixins-scss.set-color-alpha(var(--scheme-invert), 0.1)}
          li.is-active a
            &,
            &:hover
              background-color: var(--#{$name}-invert)
              border-color: var(--#{$name}-invert)
              color: var(--#{$name})
      // Modifiers
      @if meta.type-of($color) == 'color'
        &.is-bold
          // Top-left: darker with subtle hue shift (mix with a darker, shifted color)
          $gradient-top-left: color-mix(in oklch, var(--#{$name}) 80%, oklch(0.3 0.1 calc(from var(--#{$name}) h - 20)) 20%);
          // Bottom-right: lighter with opposite hue shift
          $gradient-bottom-right: color-mix(in oklch, var(--#{$name}) 85%, oklch(0.9 0.05 calc(from var(--#{$name}) h + 20)) 15%);

          // $gradient-top-left: darken(saturate(adjust-hue($color, -10deg), 10%), 10%)
          // $gradient-bottom-right: lighten(saturate(adjust-hue($color, 10deg), 5%), 5%)
          background-image: linear-gradient(141deg, #{$gradient-top-left} 0%, var(--#{$name}) 71%, #{$gradient-bottom-right} 100%);
          +utilities.mobile
            .navbar-menu
              background-image: linear-gradient(141deg, #{$gradient-top-left} 0%, var(--#{$name}) 71%, #{$gradient-bottom-right} 100%);
  // Sizes
  &.is-small
    --hero-body-padding: var(--hero-body-padding-small)
  &.is-medium
    +utilities.tablet
      --hero-body-padding: var(--hero-body-padding-medium)
  &.is-large
    +utilities.tablet
      --hero-body-padding: var(--hero-body-padding-large)
  &:is(.is-halfheight, .is-fullheight, .is-fullheight-with-navbar)
    .hero-body
      align-items: center
      display: flex
      & > .container
        flex-grow: 1
        flex-shrink: 1
  &.is-halfheight
    min-height: 50vh
  &.is-fullheight
    min-height: 100vh

// Components

.hero-video
  @extend %overlay
  overflow: hidden
  video
    left: 50%
    min-height: 100%
    min-width: 100%
    position: absolute
    top: 50%
    transform: translate3d(-50%, -50%, 0)
  // Modifiers
  &.is-transparent
    opacity: 0.3
  // Responsiveness
  +utilities.mobile
    display: none

.hero-buttons
  +utilities.logical-y(margin, 1.5rem, $bottom: false)
  // Responsiveness
  +utilities.mobile
    .button
      display: flex
      &:not(:last-child)
        +utilities.logical-y(margin, 0.75rem, $bottom: true)
  +utilities.tablet
    display: flex
    justify-content: center
    .button:not(:last-child)
      +utilities.logical-x(margin, 1.5rem, $right: true)

// Containers

.hero-head,
.hero-foot
  flex-grow: 0
  flex-shrink: 0

.hero-body
  flex-grow: 1
  flex-shrink: 0
  padding: var(--hero-body-padding)
  +utilities.tablet-only
    padding: var(--hero-body-padding-tablet)
