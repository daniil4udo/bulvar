@use "sass:list";

@use "../../../bulma/sass/utilities" as bulma-utilities;
@use "../../../bulma/sass/form/shared" as bulma-form;
@use "../../../bulma/sass/utilities/mixins-scss" as bulma-mixins-scss;

$tooltip-arrow-size: 5px !default;
$tooltip-arrow-margin: 2px !default;
$tooltip-multiline-sizes: (
    small: 180px,
    medium: 240px,
    large: 300px
) !default;

$tooltip-colors: bulma-form.$form-colors !default;

// Map Local variables
$-css-vars-map: (
    "tooltip-arrow-size": $tooltip-arrow-size,
    "tooltip-arrow-margin": $tooltip-arrow-margin,
);

// Register & Export CSS Variabless
@include bulma-utilities.exportCSSVars($-css-vars-map);
@include bulma-utilities.registerComponentCSSVars("b-tooltip", $-css-vars-map);

@mixin tooltip-arrow-color($direction, $color) {
    @if  $direction == "is-top" {
        border-top-color: $color;
    } @else if $direction == "is-bottom" {
        border-bottom-color: $color;
    } @else if $direction == "is-right" {
        border-inline-end-color: $color;
    } @else if $direction == "is-left" {
        border-inline-start-color: $color;
    }
}

@mixin tooltip($direction) {
    &.#{$direction} {
        .tooltip-content {
            // TODO: move calculations calc(100... to CSS Var
            --tooltip-content-spacing: calc(100% + var(--tooltip-arrow-size) + var(--tooltip-arrow-margin));
            @if  $direction == "is-top" {
				@include bulma-utilities.logical-y(inset, auto var(--tooltip-content-spacing));
				@include bulma-utilities.logical-x(inset, 50% auto);
                transform: translateX(-50%);

                &::before {
					@include bulma-utilities.logical-y(inset, 100% auto);
					@include bulma-utilities.logical-x(inset, 50% auto);
                    border-top: var(--tooltip-arrow-size) solid var(--primary);
					@include bulma-utilities.logical-x(border, var(--tooltip-arrow-size) solid transparent);
                    transform: translateX(-50%);
                }
            } @else if $direction == "is-bottom" {
				@include bulma-utilities.logical-y(inset, var(--tooltip-content-spacing) auto);
				@include bulma-utilities.logical-x(inset, 50% auto);
                transform: translateX(-50%);

                &::before {
					@include bulma-utilities.logical-y(inset, auto 100%);
					@include bulma-utilities.logical-x(inset, 50% auto);
					@include bulma-utilities.logical-x(border, var(--tooltip-arrow-size) solid transparent);
                    border-bottom: var(--tooltip-arrow-size) solid var(--primary);
                    transform: translateX(-50%);
                }
            } @else if $direction == "is-right" {
				@include bulma-utilities.logical-y(inset, 50% auto);
				@include bulma-utilities.logical-x(inset, var(--tooltip-content-spacing) auto);
                transform: translateY(-50%);

                &::before {
					@include bulma-utilities.logical-y(inset, 50% auto);
					@include bulma-utilities.logical-x(inset, auto 100%);
                    border-block: var(--tooltip-arrow-size) solid transparent;
					@include bulma-utilities.logical-x(border, var(--tooltip-arrow-size) solid var(--primary), $right: true);
                    transform: translateY(-50%);
                }
            } @else if $direction == "is-left" {
				@include bulma-utilities.logical-y(inset, 50% auto);
				@include bulma-utilities.logical-x(inset, auto var(--tooltip-content-spacing));
                transform: translateY(-50%);

                &::before {
					@include bulma-utilities.logical-y(inset, 50% auto);
					@include bulma-utilities.logical-x(inset, 100% auto);
                    border-block: var(--tooltip-arrow-size) solid transparent;
					@include bulma-utilities.logical-x(border, var(--tooltip-arrow-size) solid var(--primary), $right: false);
                    transform: translateY(-50%);
                }
            }
        }
        @each $name, $pair in $tooltip-colors {
            &.is-#{$name} {
                .tooltip-content::before {
                    @include tooltip-arrow-color($direction, var(--#{$name}))
                }
                // If light and dark colors are provided
                @if list.length($pair) >= 4 {
                    &.is-light {
                        .tooltip-content::before {
                            @include tooltip-arrow-color($direction, var(--#{$name}-light))
                        }
                    }
                }
            }
        }
    }
}

// Base
.b-tooltip {
    @include tooltip("is-top");
    @include tooltip("is-right");
    @include tooltip("is-bottom");
    @include tooltip("is-left");
    position: relative;
    display: inline-flex;
    .tooltip-content {
        position: absolute;
        z-index: 38;
        width: auto;
        padding: 0.35rem 0.75rem;
        border-radius: var(--radius-large);
        box-shadow: 0 1px 2px 1px #{bulma-mixins-scss.set-color-alpha(var(--scheme-invert), 0.2)};
        font-size: 0.85rem;
        font-weight: var(--weight-normal);
        white-space: nowrap;

        &::before {
            position: absolute;
            z-index: 38;
            content: "";
            pointer-events: none;
        }
    }
    .tooltip-trigger {
        width: 100%;
    }
    // Modifiers
    @each $name, $pair in $tooltip-colors {
        &.is-#{$name} {
            .tooltip-content {
                background: var(--#{$name});
                color: var(--#{$name}-invert)
            }
            // If light and dark colors are provided
            @if list.length($pair) >= 4 {
                &.is-light {
                    .tooltip-content {
                        background: var(--#{$name}-light);
                        color: var(--#{$name}-dark);
                    }
                }
            }
        }
    }
    &.is-always {
        .tooltip-content::before,
        .tooltip-content {
            opacity: 1;
            visibility: visible;
        }
    }
    &.is-multiline {
        .tooltip-content {
            display: flex-block;
            text-align: center;
            white-space: normal;
        }
        @each $name, $size in $tooltip-multiline-sizes {
            &.is-#{$name} {
                .tooltip-content {
                    width: $size;
                }
            }
        }
    }
    &.is-dashed {
        .tooltip-trigger {
            border-bottom: 1px dashed var(--grey-light);
            cursor: default;
        }
    }
    &.is-square {
        .tooltip-content {
            border-radius: 0;
        }
    }
}
