@use "sass:list";

@use "../../../bulma/sass/utilities" as bulma-utilities;
@use "../../../bulma/sass/elements/progress" as bulma-progress;

$progress-value-color: var(--scheme-main) !default;
$progress-value-size: var(--size-normal) !default;

// Map Local variables
$-css-vars-map: (
    "progress-value-color": $progress-value-color,
    "progress-value-size": $progress-value-size,
);

// Register & Export CSS Variabless
@include bulma-utilities.exportCSSVars($-css-vars-map);
@include bulma-utilities.registerComponentCSSVars("progress-wrapper", $-css-vars-map);

.progress-wrapper {
    position: relative;
    overflow: hidden;

    &:not(:last-child) {
        margin-bottom: 1.5rem;
    }

    .progress-value {
        position: absolute;
        top: 0;
        left: 50%;
        transform: translateX(-50%);
        font-size: calc(var(--progress-value-size) / 1.5);
        line-height: var(--progress-value-size);
        font-weight: var(--weight-bold);
        color: var(--progress-value-color);
        white-space: nowrap;
    }

    .progress, .progress-bar {
        margin-bottom: 0;

        @include bulma-utilities.control-sizes(progress-value-size);

        &::-webkit-progress-value {
            transition: width 0.5s ease;
        }

        &.is-more-than-half {
            +.progress-value {
                color: var(--progress-value-color);
            }

            @each $name, $pair in bulma-progress.$progress-colors {
                $color: list.nth($pair, 1);
                $color-invert: list.nth($pair, 2);
                &.is-#{$name} {
                    + .progress-value {
                        color: var(--#{$name}-invert);
                    }
                }
            }
        }

        &.is-squared {
            border-radius: 0;
        }
    }

    &.is-not-native {
        @extend .progress;
        white-space: nowrap;
        background-color: var(--progress-bar-background-color);
        border-radius: var(--progress-border-radius);

        .progress-bar {
            position: relative;
            display: inline-block;
            vertical-align: top;
            height: 100%;
            background-color: var(--progress-value-background-color);

            .progress-value {
                color: var(--progress-value-color);
            }

            @each $name, $pair in bulma-progress.$progress-colors {
                $color: list.nth($pair, 1);
                $color-invert: list.nth($pair, 2);
                &.is-#{$name} {
                    background-color: var(--#{$name});
                    .progress-value {
                        color: var(--#{$name}-invert);
                    }
                }
            }
        }
    }

    &.is-squared {
        border-radius: 0;
    }
}
