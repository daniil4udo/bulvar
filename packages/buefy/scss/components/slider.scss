@use "sass:list";

@use "../../../bulma/sass/utilities" as bulma-utilities;
@use "../../../bulma/sass/form/shared" as bulma-form;

$slider-radius: var(--radius) !default;
$slider-size: var(--size-normal) !default;
$slider-track-background: var(--grey-lighter) !default;
$slider-track-radius: var(--radius) !default;
$slider-track-color: var(--grey) !default;
$slider-track-border: 0 solid $slider-track-color !default;
$slider-track-shadow: 0 0 0 $slider-track-color !default;
$slider-thumb-background: var(--scheme-main) !default;
$slider-thumb-radius: var(--radius) !default;
$slider-thumb-color: var(--grey-light) !default;
$slider-thumb-border: 1px solid $slider-thumb-color !default;
$slider-thumb-shadow: none !default;
$slider-thumb-to-track-ratio: 2 !default;
$slider-tick-to-track-ratio: 0.5 !default;
$slider-tick-width: 3px !default;
$slider-tick-radius: var(--radius) !default;
$slider-tick-background: $slider-thumb-color !default;
$slider-mark-size: 0.75rem !default;

$slider-colors: bulma-form.$form-colors !default;

// Map Local variables
$-css-vars-map: (
    "slider-radius": $slider-radius,
    "slider-size": $slider-size,
    "slider-track-background": $slider-track-background,
    "slider-track-radius": $slider-track-radius,
    "slider-track-color": $slider-track-color,
    "slider-track-border": $slider-track-border,
    "slider-track-shadow": $slider-track-shadow,
    "slider-thumb-background": $slider-thumb-background,
    "slider-thumb-radius": $slider-thumb-radius,
    "slider-thumb-color": $slider-thumb-color,
    "slider-thumb-border": $slider-thumb-border,
    "slider-thumb-shadow": $slider-thumb-shadow,
    "slider-thumb-to-track-ratio": $slider-thumb-to-track-ratio,
    "slider-tick-to-track-ratio": $slider-tick-to-track-ratio,
    "slider-tick-width": $slider-tick-width,
    "slider-tick-radius": $slider-tick-radius,
    "slider-tick-background": $slider-tick-background,
    "slider-mark-size": $slider-mark-size,
);

// Register & Export CSS Variabless
@include bulma-utilities.exportCSSVars($-css-vars-map);
@include bulma-utilities.registerComponentCSSVars("b-slider", $-css-vars-map);

@mixin slider-size {
    $track-height: calc(var(--slider-size) / var(--slider-thumb-to-track-ratio));
    $tick-height: calc(#{$track-height} * var(--slider-tick-to-track-ratio));

    .b-slider-track {
        height: $track-height;
    }

    .b-slider-thumb {
        width: var(--slider-size);
        height: var(--slider-size);
    }

    .b-slider-tick {
        height: $tick-height;
    }

    .b-slider-tick-label {
        position: absolute;
        top: calc((#{$track-height} * 0.5) + 2px);
        @include bulma-utilities.logical-x(inset, 50%, $right: false);
        font-size: var(--slider-mark-size);
        transform: translateX(-50%);
    }
}

.b-slider {
    width: 100%;
    margin: 1em 0;
    background: transparent;

    .b-slider-track {
        position: relative;
        display: flex;
        align-items: center;
        border-radius: var(--slider-radius);
        background: var(--slider-track-background);
        cursor: pointer;
    }
    .b-slider-fill {
        position: absolute;
        // Fix alignment in IE 11. Cancel out for others
        top: 50%;
        height: 100%;
        border: var(--slider-track-border);
        border-radius: $slider-track-radius;
        background: var(--slider-track-background);
        box-shadow: var(--slider-track-shadow);
        transform: translateY(-50%);
    }
    .b-slider-thumb-wrapper {
        position: absolute;
        top: 50%;
        display: inline-flex;
        flex-direction: column; // Fix shrinked thumb at the end in IE 11
        align-items: center;
        cursor: grab;
        transform: translate(-50%, -50%);

        .b-slider-thumb {
            border: var(--slider-thumb-border);
            border-radius: var(--slider-thumb-radius);
            background: var(--slider-thumb-background);
            box-shadow: var(--slider-thumb-shadow);
            &:focus {
                transform: scale(1.25);
            }
        }

        &.is-dragging {
            cursor: grabbing;
            .b-slider-thumb {
                transform: scale(1.25);
            }
        }

        &.has-indicator {
            .b-slider-thumb {
                display: flex;
                width: auto;
                align-items: center;
                padding: 16px 10px;
            }
        }
    }

    &.slider-focus{
		@include bulma-utilities.logical-y(padding, 20px);
		@include bulma-utilities.logical-y(margin, -20px);
        cursor: pointer;
    }

    &.is-rounded {
        .b-slider-thumb {
            border-radius: var(--radius-rounded);
        }
    }
    &.is-disabled {
        .b-slider-track {
            cursor: not-allowed;
            opacity: 0.5;
        }
        .b-slider-thumb-wrapper {
            cursor: not-allowed;
            .b-slider-thumb {
                transform: scale(1);
            }
        }
    }

    @include slider-size;
    @include bulma-utilities.control-sizes(slider-size);

    @each $name, $pair in $slider-colors {
        $color: list.nth($pair, 1);
        &.is-#{$name} {
            .b-slider-fill {
                background: var(--#{$name}) !important;
            }
        }
    }

    .b-slider-tick {
        position: absolute;
        top: 50%;
        width: var(--slider-tick-width);
        border-radius: var(--slider-tick-radius);
        background: var(--slider-tick-background);
        transform: translate(-50%, -50%);
        &.is-tick-hidden {
            background: transparent;
        }
    }
}
