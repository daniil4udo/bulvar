@use "sass:math";

@use "../../../bulma/sass/utilities" as bulma-utilities;

$carousel-min-height: 120px !default;

$carousel-arrow-background: var(--scheme-main) !default;
$carousel-arrow-color: var(--primary) !default;
$carousel-arrow-icon-spaced: 1.5rem !default;
$carousel-arrow-top: 50% !default;

$carousel-indicator-background: rgba(var(--scheme-invert-rgb), 0.50) !default;
$carousel-indicator-border: var(--scheme-main) !default;
$carousel-indicator-color: var(--primary) !default;
$carousel-indicator-spaced: .5rem !default;

$carousel-overlay-background: rgba(var(--scheme-invert-rgb), 0.86) !default;
$carousel-overlay-z: 40 !default;

// Map Local variables
$-css-vars-map: (
    "carousel-min-height": $carousel-min-height,
    "carousel-arrow-background": $carousel-arrow-background,
    "carousel-arrow-color": $carousel-arrow-color,
    "carousel-arrow-icon-spaced": $carousel-arrow-icon-spaced,
    "carousel-arrow-top": $carousel-arrow-top,
    "carousel-indicator-background": $carousel-indicator-background,
    "carousel-indicator-border": $carousel-indicator-border,
    "carousel-indicator-color": $carousel-indicator-color,
    "carousel-indicator-spaced": $carousel-indicator-spaced,
    "carousel-overlay-background": $carousel-overlay-background,
    "carousel-overlay-z": $carousel-overlay-z,
);

// Register CSS Variables
@include bulma-utilities.exportCSSVars($-css-vars-map);
@include bulma-utilities.registerComponentCSSVars("carousel", $-css-vars-map);

.carousel {
    @extend %unselectable;
    position: relative;
    min-height: var(--carousel-min-height);
    &.is-overlay {
        position: fixed;
        z-index: var(--carousel-overlay-z);
        display: flex;
        max-height: 100vh;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        background-color: var(--carousel-overlay-background);
        .carousel-item img {
            cursor: default;
        }
        .carousel-indicator.has-background {
            background: transparent;
        }
    }
    .progress {
        height: 0.25rem;
        margin-bottom: 0;
        border-radius: var(--radius-small);
    }
    .carousel-items {
        position: relative;
        display: flex;
        overflow: hidden;
        width: 100%;
        &:hover .carousel-arrow.is-hovered {
            @include bulma-utilities.tablet {
                opacity: 1;
            }
        }
        .carousel-item {
            width: 100%;
            flex-shrink: 0;
        }
    }
    .carousel-pause {
        position: absolute;
        z-index: 1;
        top: 0;
        right: 0.15rem;
        pointer-events: none;
    }
    .carousel-indicator {
        display: flex;
        width: 100%;
        align-items: center;
        justify-content: center;
        padding: var(--carousel-indicator-spaced);
        &.has-background {
            background: var(--carousel-indicator-background);
        }
        &.has-custom {
            overflow: hidden;
            flex-wrap: nowrap;
            justify-content: flex-start;
            overflow-x: auto;
            @include bulma-utilities.overflow-touch;
            &.is-small .indicator-item {
                flex: 1 0 10%;
            }
            &.is-medium .indicator-item {
                flex: 1 0 math.div(100, 6) * 1%;
            }
        }
        &.is-inside {
            position: absolute;
            &.is-bottom {
                bottom: 0;
            }
            &.is-top {
                top: 0;
            }
        }
        .indicator-item {
            &:not(:last-child) {
                margin-right: var(--carousel-indicator-spaced);
            }
            &.is-active .indicator-style,
            .indicator-style:hover {
                border: 1px solid var(--carousel-indicator-border);
                background: var(--carousel-indicator-color);
            }
            .indicator-style {
                display: block;
                border: 1px solid var(--carousel-indicator-color);
                background: var(--carousel-indicator-border);
                outline: none;
                transition: calc(var(--speed) * 2) var(--easing);
                &.is-boxes {
                    width: 10px;
                    height: 10px;
                }
                &.is-dots {
                    width: 10px;
                    height: 10px;
                    border-radius: var(--radius-rounded);
                }
                &.is-lines {
                    width: 25px;
                    height: 5px;
                }
            }
        }
    }
}

.carousel-list {
    @extend %unselectable;
    position: relative;
    overflow: hidden;
    width: 100%;
    &.has-shadow {
        box-shadow: 0 0 10px rgba(var(--scheme-invert-rgb), 0.25);
    }
    &:hover .carousel-arrow.is-hovered {
        @include bulma-utilities.tablet {
            opacity: 1;
        }
    }
    .carousel-slides {
        position: relative;
        display: flex;
        width: 100%;
        &:not(.is-dragging) {
            transition: all calc(var(--speed) * 3) ease-out 0s;
        }
        &.has-grayscale {
            .carousel-slide {
                img {
                    filter: grayscale(100%);
                }
                &.is-active img {
                    filter: grayscale(0%);
                }
            }
        }
        &.has-opacity {
            .carousel-slide {
                img {
                    opacity: 0.25
                }
                &.is-active img {
                    opacity: 1
                }
            }
        }
        .carousel-slide {
            flex-shrink: 0;
            border: 2px solid transparent;
        }
    }
}

.carousel-arrow {
    transition: calc(var(--speed) * 2) var(--easing);
    &.is-hovered {
        opacity: 0;
    }
    .icon {
        border: 1px solid var(--carousel-arrow-background);
        background: var(--carousel-arrow-background);
        border-radius: var(--radius-rounded);
        color: var(--carousel-arrow-color);
        cursor: pointer;
        outline: 0;
        &:hover {
            border: 1px solid var(--carousel-arrow-color);
            opacity: 1;
        }
        &.has-icons-left,
        &.has-icons-right {
            position: absolute;
            z-index: 1;
            top: var(--carousel-arrow-top);
            transform: translateY(calc(-1 * var(--carousel-arrow-top)));
        }
        &.has-icons-left {
            left: var(--carousel-arrow-icon-spaced);
        }
        &.has-icons-right {
            right: var(--carousel-arrow-icon-spaced);
        }
    }
}
